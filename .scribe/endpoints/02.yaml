name: 'Managing Tickets'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/tickets
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All Tickets'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sort:
        name: sort
        description: 'Sort the tickets by a specific field(s). Separate by comma. Denote desc with a minus sign.'
        required: false
        example: 'title,-createdAt'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[status]':
        name: 'filter[status]'
        description: 'Filter tickets by status code: A, C, H, X. Separate by comma.'
        required: false
        example: 'A,C'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[title]':
        name: 'filter[title]'
        description: 'Filter tickets by title. Wildcard supported.'
        required: false
        example: '*fix*'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[createdAt]':
        name: 'filter[createdAt]'
        description: 'Filter tickets by creation date. Can be a single date or a range separated by comma.'
        required: false
        example: '2023-01-01,2023-01-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[updatedAt]':
        name: 'filter[updatedAt]'
        description: 'Filter tickets by update date. Can be a single date or a range separated by comma.'
        required: false
        example: '2023-01-01,2023-01-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      sort: 'title,-createdAt'
      'filter[status]': 'A,C'
      'filter[title]': '*fix*'
      'filter[createdAt]': '2023-01-01,2023-01-31'
      'filter[updatedAt]': '2023-01-01,2023-01-31'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 403
        content: |-
          {
              "message": "This action is unauthorized."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|bUzPjds8rRPZI4pV17PTeLEcClmkjUSmF65wa8J2b62934d9'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/tickets
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a Ticket.'
      description: 'Stores a new ticket. Users can only create tickets for themselves. Managers can create tickets for any user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: fugit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Ut vero voluptatem quisquam qui a.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: A
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: 'The <code>id</code> of an existing record in the users table. Must be 1.'
        required: true
        example: '1'
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: fugit
          description: 'Ut vero voluptatem quisquam qui a.'
          status: A
        relationships:
          author:
            data:
              id: '1'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|bUzPjds8rRPZI4pV17PTeLEcClmkjUSmF65wa8J2b62934d9'
    controller: null
    method: null
    route: null
    custom: []
